create sequence "Place_Id_seq";

alter sequence "Place_Id_seq" owner to postgres;

create sequence "Room_Id_seq";

alter sequence "Room_Id_seq" owner to postgres;

create sequence "RoomBooking_Id_seq";

alter sequence "RoomBooking_Id_seq" owner to postgres;

create sequence "Subscription_Id_seq";

alter sequence "Subscription_Id_seq" owner to postgres;

create sequence "SubscriptionType_Id_seq";

alter sequence "SubscriptionType_Id_seq" owner to postgres;

create sequence "TimeSlot_Id_seq";

alter sequence "TimeSlot_Id_seq" owner to postgres;

create sequence "personnal_Id_seq";

alter sequence "personnal_Id_seq" owner to postgres;

create sequence "Tickets_Id_seq";

alter sequence "Tickets_Id_seq" owner to postgres;

create sequence "Ware_Id_seq";

alter sequence "Ware_Id_seq" owner to postgres;

create sequence "Meal_Id_seq";

alter sequence "Meal_Id_seq" owner to postgres;

create sequence "MealReservation_Id_seq";

alter sequence "MealReservation_Id_seq" owner to postgres;

create sequence "TicketAttribution_Id_seq";

alter sequence "TicketAttribution_Id_seq" owner to postgres;

create table if not exists "Users"
(
    "Id"        bigint generated by default as identity
        constraint "Users_pkey"
            primary key,
    "FirstName" varchar(128),
    "LastName"  varchar(128),
    "IsStudent" boolean  not null,
    "Type"      smallint not null
);

alter table "Users"
    owner to postgres;

create table if not exists "Place"
(
    "Id"                 bigint generated by default as identity
        constraint "Place_pkey"
            primary key,
    "Name"               varchar(128) not null
        constraint "UniqueName"
            unique,
    "HighBandwidthWifi"  boolean      not null,
    "MembersOnlyArea"    boolean      not null,
    "UnlimitedBeverages" boolean      not null,
    "CosyRoomAmount"     integer,
    "LaptopAmount"       integer,
    "PrinterAmount"      integer
);

alter table "Place"
    owner to postgres;

create table if not exists "TimeSlot"
(
    "Id"           bigint generated by default as identity
        constraint "TimeSlot_pkey"
            primary key,
    "Day"          smallint not null,
    "StartHour"    smallint,
    "StartMinutes" smallint,
    "EndHour"      smallint,
    "EndMinutes"   smallint,
    "PlaceId"      bigint
        constraint "TimeSlot_Place_FK"
            references "Place"
);

alter table "TimeSlot"
    owner to postgres;

create table if not exists "Room"
(
    "Id"       bigint generated by default as identity
        constraint "Room_pkey"
            primary key,
    "Name"     varchar not null
        constraint "NameUnique"
            unique,
    "PlaceId"  bigint  not null
        constraint "Room_PlaceId_fkey"
            references "Place",
    "RoomType" bigint  not null
);

alter table "Room"
    owner to postgres;

create table if not exists "RoomBooking"
(
    "Id"     bigint generated by default as identity
        constraint "RoomBooking_pkey"
            primary key,
    "RoomId" bigint    not null
        constraint "RoomFk"
            references "Room",
    "UserId" bigint    not null
        constraint "UserFk"
            references "Users",
    "Start"  timestamp not null,
    "End"    timestamp not null
);

alter table "RoomBooking"
    owner to postgres;

create table if not exists "SubscriptionType"
(
    "Id"                         bigint generated by default as identity
        constraint "SubscriptionType_pkey"
            primary key,
    "Name"                       varchar(128) not null
        constraint "SubTypeUniqueName"
            unique,
    "FixedContractDurationMonth" bigint       not null,
    "PriceFirstHour"             numeric      not null,
    "PriceNextHalfHour"          numeric      not null,
    "PriceDay"                   numeric      not null,
    "PriceDayStudent"            numeric      not null,
    "FixedContractMonthlyFee"    numeric      not null,
    "ContractFreeMonthlyFee"     numeric      not null,
    "Description"                varchar
);

alter table "SubscriptionType"
    owner to postgres;

create table if not exists "Subscription"
(
    "Id"            bigint generated by default as identity
        constraint "Subscription_pkey"
            primary key,
    "TypeId"        bigint    not null
        constraint "Sub_Type_FK"
            references "SubscriptionType",
    "LatestRenewal" timestamp not null,
    "UserId"        bigint    not null
        constraint "User_Sub_FK"
            references "Users",
    "PlaceId"       bigint    not null
        constraint "User_Place_FK"
            references "Place",
    "FixedContract" boolean   not null
);

alter table "Subscription"
    owner to postgres;

create table if not exists "Ware"
(
    "Id"           bigint generated by default as identity
        constraint "Ware_pkey"
            primary key,
    "Name"         varchar not null,
    "Description"  varchar,
    "SerialNumber" varchar not null,
    "PlaceId"      bigint  not null
        constraint "ware_place_FK"
            references "Place",
    "InStorage"    boolean not null
);

alter table "Ware"
    owner to postgres;

create unique index if not exists ware_serialnumber_uindex
    on "Ware" ("SerialNumber");

create table if not exists "Tickets"
(
    "Id"          bigint generated by default as identity
        constraint "Tickets_pkey"
            primary key,
    "OpenedBy"    bigint    not null
        constraint "ticket_user_FK"
            references "Users",
    "State"       smallint  not null,
    "Description" varchar   not null,
    "PlaceId"     bigint    not null
        constraint "ticket_place_FK"
            references "Place",
    "Title"       varchar,
    "Created"     timestamp not null
);

alter table "Tickets"
    owner to postgres;

create table if not exists "Meal"
(
    "Id"          bigint generated by default as identity
        constraint "Meal_pkey"
            primary key,
    "Date"        date    not null,
    "Description" varchar not null,
    "PlaceId"     bigint  not null
        constraint "meal_place_FK"
            references "Place"
);

alter table "Meal"
    owner to postgres;

create table if not exists "MealReservation"
(
    "Id"     bigint generated by default as identity
        constraint "MealReservation_pkey"
            primary key,
    "MealId" bigint not null
        constraint "mealreservation_meal_FK"
            references "Meal",
    "UserId" bigint not null
        constraint "mealreservation_user_FK"
            references "Users",
    "Note"   varchar
);

alter table "MealReservation"
    owner to postgres;

create table if not exists "TicketAttribution"
(
    "Id"       bigint generated by default as identity
        constraint "TicketAttribution_pkey"
            primary key,
    "StaffId"  bigint not null
        constraint "TicketAttribution_User_FK"
            references "Users",
    "TicketId" bigint not null
        constraint "TicketAttribution_Ticket_FK"
            references "Tickets"
);

alter table "TicketAttribution"
    owner to postgres;

create table if not exists "Login"
(
    "Id"           bigint generated by default as identity
        constraint login_pk
            primary key,
    "PasswordHash" bytea  not null,
    "PasswordSalt" bytea  not null,
    "UserId"       bigint not null,
    "Email"        varchar
);

alter table "Login"
    owner to postgres;

create table if not exists "StaffLocation"
(
    "Id"      bigint generated by default as identity
        constraint "StaffLocation_pkey"
            primary key,
    "UserId"  bigint not null
        constraint "StaffLocation_User_FK"
            references "Users",
    "PlaceId" bigint not null
        constraint "StaffLocation_Place_FK"
            references "Place"
);

alter table "StaffLocation"
    owner to postgres;

create table if not exists "TicketComment"
(
    "Id"       bigint generated by default as identity
        constraint "TicketComment_pkey"
            primary key,
    "Content"  varchar   not null,
    "TicketId" bigint    not null
        constraint "TicketComment_Ticket_FK"
            references "Tickets",
    "AuthorId" bigint    not null
        constraint "TicketComment_User_FK"
            references "Users",
    "Created"  timestamp not null
);

alter table "TicketComment"
    owner to postgres;

create table if not exists "TicketWare"
(
    "Id"       bigint generated by default as identity
        constraint "TicketWare_pkey"
            primary key,
    "TicketId" bigint not null
        constraint "TicketWare_Ticket_FK"
            references "Tickets",
    "WareId"   bigint not null
        constraint "TicketWare_Ware_Fk"
            references "Ware"
);

alter table "TicketWare"
    owner to postgres;

create table if not exists "WareBooking"
(
    "Id"     bigint generated by default as identity
        constraint "WareBooking_pkey"
            primary key,
    "WareId" bigint    not null
        constraint "WareBooking_Ware_FK"
            references "Ware",
    "UserId" bigint    not null
        constraint "WareBooking_User_Fk"
            references "Users",
    "Start"  timestamp not null,
    "End"    timestamp not null
);

alter table "WareBooking"
    owner to postgres;

INSERT INTO public."SubscriptionType" ("Id", "Name", "FixedContractDurationMonth", "PriceFirstHour", "PriceNextHalfHour", "PriceDay", "PriceDayStudent", "FixedContractMonthlyFee", "ContractFreeMonthlyFee", "Description") VALUES (1, 'Résident', 8, 0, 0, 0, 0, 252, 300, 'Rejoignez la communauté
CO''WORK et devenez membre
résident !');
INSERT INTO public."SubscriptionType" ("Id", "Name", "FixedContractDurationMonth", "PriceFirstHour", "PriceNextHalfHour", "PriceDay", "PriceDayStudent", "FixedContractMonthlyFee", "ContractFreeMonthlyFee", "Description") VALUES (0, 'Simple', 12, 4, 2, 20, 20, 20, 24, 'Rejoignez la communauté
CO''WORK et bénéficiez de
tarifs préférentiels !');

INSERT INTO public."Place" ("Id", "Name", "HighBandwidthWifi", "MembersOnlyArea", "UnlimitedBeverages", "CosyRoomAmount", "LaptopAmount", "PrinterAmount") VALUES (0, 'Bastille', true, true, true, 1, 0, 1);

INSERT INTO public."Login" ("Id", "PasswordHash", "PasswordSalt", "UserId", "Email") VALUES (3, E'\\xF37408CD9F182452DEB14FB2E17A9C9F1429B0B25462043B74D2AD49FCB8B7F05B5E89DB030A77BC8106B401480CE4A3DB462A6062AE32B1548DA35A115DBD55', E'\\x590FE0812F36DBB87AF993A573178223A067FCA3036214C805A9A7A9B70D6408F078440733EF83CBF8D439C7AB4E50611B56DFDF5CD7DEA08E001B78740E1B52B5609C1BCC2EEB954CDE3127A8954CB201694DAAA309F0F61407E281658913FE60AC420D96AFFF486C8BDE0B19DB877691674B3E348A88C4E2676C28ECCD445D', 136, 'takethispie');

INSERT INTO public."Users" ("Id", "FirstName", "LastName", "IsStudent", "Type") VALUES (136, 'alexandre', 'felix', false, 0);

INSERT INTO public."SubscriptionType" ("Id", "Name", "FixedContractDurationMonth", "PriceFirstHour", "PriceNextHalfHour", "PriceDay", "PriceDayStudent", "FixedContractMonthlyFee", "ContractFreeMonthlyFee", "Description") VALUES (1, 'Résident', 8, 0, 0, 0, 0, 252, 300, 'Rejoignez la communauté
CO''WORK et devenez membre
résident !');
INSERT INTO public."SubscriptionType" ("Id", "Name", "FixedContractDurationMonth", "PriceFirstHour", "PriceNextHalfHour", "PriceDay", "PriceDayStudent", "FixedContractMonthlyFee", "ContractFreeMonthlyFee", "Description") VALUES (0, 'Simple', 12, 4, 2, 20, 20, 20, 24, 'Rejoignez la communauté
CO''WORK et bénéficiez de
tarifs préférentiels !');

INSERT INTO public."Subscription" ("Id", "TypeId", "LatestRenewal", "UserId", "PlaceId", "FixedContract") VALUES (10, 0, '2019-08-31 13:43:38.044000', 136, 0, false);

